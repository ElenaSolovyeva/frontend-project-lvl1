# Name of workflow
name: Check with Eslint

# Trigger the workflow on push or pull request
on:
  - push
  - pull_request

jobs:
  build:

    # The type of machine to run the job on
    runs-on: ubuntu-latest
    # в спецификации
    # https://help.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
    # вот это не понятно:
    # "For example, you can use ubuntu-latest to specify
    # the latest version of an Ubuntu GitHub-hosted runner."
    # runs-on: ubuntu-latest
    # Что такое "an Ubuntu GitHub-hosted runner"?

    #Объясненеи наставника:
    # Когда в репозитории происходят какие-то события — гитхаб считывает файл конфигурации в workflow
    # Если изменение соответствует описанному (поле `on:`),
    # то на сервере гитхаба создаётся виртуальная машина с описанной ОС (`runs-on:`),
    # и какой-то средой (например, устанавливается нода),
    # после чего клонируется репозиторий и выполняются описанные действия
    # Так как в репозитории зависимости не хранятся — только их описание в package.json — то и работать по умолчанию не с чем
    # Следовательно, перед командой линтера должна стоять команда,
    # которая бы установила зависимости (- name: npm install, build), строка 55

    # Configuring a build matrix
    strategy:
      matrix:
      # Node versions list
        node-version: [13.x]

    steps:
        # Check out repository under Github workspace
        # https://github.com/actions/setup-node
      - uses: actions/checkout@v2

        # Step's Name

      - name: Use Node.js ${{matrix.node-version}}
        # Configures the Node version used on Github-hosted runners
        # https://github.com/actions/setup-node
        uses: actions/setup-node@v1
        # The Node.js version to configure
        with:
          node-version: ${{matrix.node-version}}

      - name: npm install, build
        # Install and build project
        # то есть серверу даётся понять, что нужно запустить команду make install
        run: |
          make install
        # Add environment variables
        env:
          CI: true

      - name: Run linter
        # Run linter
        run: |
          make lint
